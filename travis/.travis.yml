# compile Qt5 application for Windows on Linux with MinGW (currently broken)

language: cpp   
  matrix:
fast_finish: true
include:
  # cross-compile using mingw
  - compiler: ": w64"
    env: PLATFORM="mingw32" ARCH="x86_64" BITSIZE=64 HOST="x86_64"
  - compiler: ": w32"
    env: PLATFORM="mingw32" ARCH="x86" BITSIZE=32 HOST="i686"

install:
  - sudo add-apt-repository --yes ppa:beineri/opt-qt54                   # < Qt
  - sudo add-apt-repository --yes ppa:tobydox/mingw-x-precise            # < MinGW
  - sudo apt-get update -qq
  - uname -m
  - sudo apt-get install qt54base qt54imageformats qt54tools -y -qq
  - export QTDIR=/opt/qt54
  - export PATH=$QTDIR/bin:$PATH
  - export LD_LIBRARY_PATH=$QTDIR/lib/:$QTDIR/lib/`uname -m`-linux-gnu:$LD_LIBRARY_PATH
  - sudo apt-get install -y cloog-isl mingw32
  - if [ $BITSIZE == 32 ]; then sudo apt-get install -y mingw32-x-binutils mingw32-x-gcc mingw32-x-runtime; fi
  - if [ $BITSIZE == 64 ]; then sudo apt-get install -y mingw64-x-binutils mingw64-x-gcc mingw64-x-runtime; fi
  - export MINGW=/opt/mingw$BITSIZE
  - export PATH=$MINGW/bin:$PATH
  - export CC=$HOST-w64-mingw32-gcc
  - export CXX=$HOST-w64-mingw32-g++

script:
  - qmake -v
  - qmake wpnxm-servercontrolpanel.pro CONFIG+=release QMAKE_CC=$CC QMAKE_CXX=$CXX
  - gcc -v
  - gcc -dumpmachine
  - export CMAKE_OPTS="-DUSE_WERROR=ON"
  - make -j2 VERBOSE=1
